function [total_error_per_point, indv_error_per_point, trained_parameters, total_parameters] ...
    = hold_one_out_cross_validation(host_site,sg_RNA,...
                            binding_rate, max_iteration_I,...
                            use_old, Number_of_Nucleotides,...
                            old_info, ODE_parameters, off_target_sites,...
                            integration_time,integration_accuracy,...
                            Cas_concentration, crRNA_concentration, ...
                            on_target_copy_number, off_target_copy_number, ...
                            percent_off_target, off_target_weight, stopping_Tol)
    % define mismatch params
    match_mismatch_params = -1*[-1.97, -2.70, -1.66, -2.04,...
                             -1.44, -1.97, -0.78, -1.29,...
                             -1.29, -2.04, -1.04, -1.27,...
                             -0.78, -1.66, -0.12, -1.04]'; 
    % generate comparison model 
    [model_parameters, just_trained] = train_model(host_site,sg_RNA,...
                            binding_rate, max_iteration_I,...
                            use_old, Number_of_Nucleotides,...
                            old_info, ODE_parameters, off_target_sites,...
                            integration_time,integration_accuracy,...
                            Cas_concentration, crRNA_concentration, ...
                            on_target_copy_number, off_target_copy_number, ...
                            percent_off_target, off_target_weight, stopping_Tol);
    % display error trained on all
    load(old_info)
    percent_off_target = 1;
    add_plot = 0;
    [error, ~, ~] = test_model(host_site, sg_RNA,...
        binding_rate, just_trained, Number_of_Nucleotides, ...
        off_target_sites, integration_time, integration_accuracy, Cas_concentration,...
        crRNA_concentration, on_target_copy_number, off_target_copy_number,...
        off_target_weight, ODE_parameters, match_mismatch_params, add_plot);
    disp('error from model trained on all data')
    disp(error)
    
    % initialize parameters 
    total_error_per_point = zeros(size(binding_rate));
    indv_error_per_point = zeros(size(binding_rate));
    trained_parameters = zeros(length(binding_rate), length(just_trained));
    total_parameters = zeros(length(binding_rate), length(model_parameters));
    
    % hold one out training
    for data_point = 1:length(binding_rate)
        disp('data point')
        disp(data_point)
        % remove a single data point from training data
        current_host_site = host_site;
        current_host_site(data_point,:) = [];
        current_sg_RNA = sg_RNA;
        current_sg_RNA(data_point,:) = [];
        current_binding_rate = binding_rate;
        current_binding_rate(data_point,:) = [];
        % train model
        use_old = 0;
        [model_parameters, just_trained] = train_model(current_host_site,current_sg_RNA,...
                            current_binding_rate, max_iteration_I,...
                            use_old, Number_of_Nucleotides,...
                            old_info, ODE_parameters, off_target_sites,...
                            integration_time,integration_accuracy,...
                            Cas_concentration, crRNA_concentration, ...
                            on_target_copy_number, off_target_copy_number, ...
                            percent_off_target, off_target_weight, stopping_Tol);
         % store parameters
         disp('trained')
         total_parameters(data_point,:) =  model_parameters;
         trained_parameters(data_point,:) = just_trained;
         % test for error
         [error, ~, P__binding_rate] = test_model(host_site, sg_RNA,...
            binding_rate, just_trained, Number_of_Nucleotides, ...
            off_target_sites, integration_time, integration_accuracy, Cas_concentration,...
            crRNA_concentration, on_target_copy_number, off_target_copy_number,...
            off_target_weight, ODE_parameters, match_mismatch_params, add_plot);
        disp('tested')
        % store errors
        total_error_per_point(data_point) = error;
        indv_error_per_point(data_point) = P__binding_rate(data_point) - binding_rate(data_point);
        disp('saved')
        disp(indv_error_per_point(data_point))
        disp(total_error_per_point(data_point))
    end
    % display average hold out data error
    disp('average hold one out error')
    disp(error)
end